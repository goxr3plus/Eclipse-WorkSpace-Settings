package com.intralot.l10.ats.manager.retrieve.system;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

import org.junit.After;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.springframework.test.util.ReflectionTestUtils;

import com.intralot.l10.ats.manager.event.EventJPAManager;
import com.intralot.l10.ats.manager.file.FileOperationsManager;

import global.utils.FileTools;

@RunWith(MockitoJUnitRunner.class)
public class CleanupManagerTest {

	@InjectMocks
	private CleanupManager cleanupManager;

	@Mock
	private FileOperationsManager fileOperationsManager;

	@Mock
	private EventJPAManager eventJPAManager;

	final String retrieveDirectory = ".src/test/resources/CleanUp";

	@Before
	public void setup() throws IOException {

		Files.createDirectories(Paths.get(retrieveDirectory));
		Files.createFile(Paths.get(retrieveDirectory + "/file-20301129133513.txt"));
		ReflectionTestUtils.setField(cleanupManager, "retrieveDirectory", retrieveDirectory);
		ReflectionTestUtils.setField(cleanupManager, "hoursToLive", 5L);
	}

	@After
	public void end() throws IOException {
		FileTools.deleteDirectory(Paths.get(retrieveDirectory));
	}

	@Test
	public void cleanupRetrieveFiles_NON_DELETE_FILE() {

		cleanupManager.cleanupRetrieveFiles();
	}
	
	//TODO
	@Ignore
	@Test
	public void cleanupRetrieveFiles_DELETE_FILE() {

		//cleanupManager.cleanupRetrieveFiles();
	}


	@Test
	public void cleanupRetrieveFiles_Test_Exception() {

		ReflectionTestUtils.setField(cleanupManager, "retrieveDirectory",
				retrieveDirectory + File.separator + "file2.txt");
		cleanupManager.cleanupRetrieveFiles();
	}
}
